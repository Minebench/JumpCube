task buildPlugin(type: Copy, dependsOn: 'shadowJar') {
    from shadowJar.outputs.files.singleFile
    def target = file("$buildDir/plugin")
    into target
    rename { String filename -> return pluginJarName }
    System.out.printf("Building plugin into: %s/%s\n", target.getAbsolutePath(), pluginJarName)
}

task testPlugin(type: Copy, dependsOn: ['deleteTestPlugin', 'buildPlugin']) {
    System.out.println("Test Server Directory: $testServerDir")
    System.out.println("Test Plugin Target File: $testServerDir\\plugins\\$pluginJarName")

    from buildPlugin.outputs.files.singleFile
    into file("$testServerDir/plugins/")
}

task deleteTestPlugin(type: Delete) {
    outputs.upToDateWhen { !file("$testServerDir/plugins/$pluginJarName").exists() }

    delete "$testServerDir/plugins/$pluginJarName"
}

compileJava {
    options.encoding = "UTF-8"
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from(sourceSets.main.resources) {
        expand project.properties
    }
}
